#from oaiso.tests1 import distance_filter, contents_filter
from oaiso.tests2 import distance_filter, contents_filter
import sys
import csv

#入力項目
filename = 'kyobashi_final.csv' #ファイル名(例：地名_価格帯(c OR r OR e).csv)
lat = 35.676097		#緯度
lng = 139.768709	#経度
bud = 'r' #価格帯指定

dirpass = '/home/nakanopbl2017/cgi-bin/simulations/' + filename #パス

r = 500   #エリアの距離
num = 100 #提案店舗数
app = []


#ユーザベクトル全パターン

if bud == 'c':
	uvec_list = [
	[1,0,0,1,0,0,0,1,0],
	[1,0,0,1,0,0,0,0,1],
	[1,0,0,1,0.5,0,0,1,0],
	[1,0,0,1,0.5,0,0,0,1],
	[1,0,0,1,0,0.5,0,1,0],
	[1,0,0,1,0,0.5,0,0,1],
	[1,0,0,1,0,0,0.5,1,0],
	[1,0,0,1,0,0,0.5,0,1],
	[1,0,0,0.5,1,0,0,1,0],
	[1,0,0,0.5,1,0,0,0,1],
	[1,0,0,0,1,0,0,1,0],
	[1,0,0,0,1,0,0,0,1],
	[1,0,0,0,1,0.5,0,1,0],
	[1,0,0,0,1,0.5,0,0,1],
	[1,0,0,0,1,0,0.5,1,0],
	[1,0,0,0,1,0,0.5,0,1],
	[1,0,0,0.5,0,1,0,1,0],
	[1,0,0,0.5,0,1,0,0,1],
	[1,0,0,0,0.5,1,0,1,0],
	[1,0,0,0,0.5,1,0,0,1],
	[1,0,0,0,0,1,0,1,0],
	[1,0,0,0,0,1,0,0,1],
	[1,0,0,0,0,1,0.5,1,0],
	[1,0,0,0,0,1,0.5,0,1],
	[1,0,0,0.5,0,0,1,1,0],
	[1,0,0,0.5,0,0,1,0,1],
	[1,0,0,0,0.5,0,1,1,0],
	[1,0,0,0,0.5,0,1,0,1],
	[1,0,0,0,0,0.5,1,1,0],
	[1,0,0,0,0,0.5,1,0,1],
	[1,0,0,0,0,0,1,1,0],
	[1,0,0,0,0,0,1,0,1]
	]

elif bud == 'r':
	uvec_list = [
	[0,1,0,1,0,0,0,1,0],
	[0,1,0,1,0,0,0,0,1],
	[0,1,0,1,0.5,0,0,1,0],
	[0,1,0,1,0.5,0,0,0,1],
	[0,1,0,1,0,0.5,0,1,0],
	[0,1,0,1,0,0.5,0,0,1],
	[0,1,0,1,0,0,0.5,1,0],
	[0,1,0,1,0,0,0.5,0,1],
	[0,1,0,0.5,1,0,0,1,0],
	[0,1,0,0.5,1,0,0,0,1],
	[0,1,0,0,1,0,0,1,0],
	[0,1,0,0,1,0,0,0,1],
	[0,1,0,0,1,0.5,0,1,0],
	[0,1,0,0,1,0.5,0,0,1],
	[0,1,0,0,1,0,0.5,1,0],
	[0,1,0,0,1,0,0.5,0,1],
	[0,1,0,0.5,0,1,0,1,0],
	[0,1,0,0.5,0,1,0,0,1],
	[0,1,0,0,0.5,1,0,1,0],
	[0,1,0,0,0.5,1,0,0,1],
	[0,1,0,0,0,1,0,1,0],
	[0,1,0,0,0,1,0,0,1],
	[0,1,0,0,0,1,0.5,1,0],
	[0,1,0,0,0,1,0.5,0,1],
	[0,1,0,0.5,0,0,1,1,0],
	[0,1,0,0.5,0,0,1,0,1],
	[0,1,0,0,0.5,0,1,1,0],
	[0,1,0,0,0.5,0,1,0,1],
	[0,1,0,0,0,0.5,1,1,0],
	[0,1,0,0,0,0.5,1,0,1],
	[0,1,0,0,0,0,1,1,0],
	[0,1,0,0,0,0,1,0,1]
	]

else:
	uvec_list = [
	[0,0,1,1,0,0,0,1,0],
	[0,0,1,1,0,0,0,0,1],
	[0,0,1,1,0.5,0,0,1,0],
	[0,0,1,1,0.5,0,0,0,1],
	[0,0,1,1,0,0.5,0,1,0],
	[0,0,1,1,0,0.5,0,0,1],
	[0,0,1,1,0,0,0.5,1,0],
	[0,0,1,1,0,0,0.5,0,1],
	[0,0,1,0.5,1,0,0,1,0],
	[0,0,1,0.5,1,0,0,0,1],
	[0,0,1,0,1,0,0,1,0],
	[0,0,1,0,1,0,0,0,1],
	[0,0,1,0,1,0.5,0,1,0],
	[0,0,1,0,1,0.5,0,0,1],
	[0,0,1,0,1,0,0.5,1,0],
	[0,0,1,0,1,0,0.5,0,1],
	[0,0,1,0.5,0,1,0,1,0],
	[0,0,1,0.5,0,1,0,0,1],
	[0,0,1,0,0.5,1,0,1,0],
	[0,0,1,0,0.5,1,0,0,1],
	[0,0,1,0,0,1,0,1,0],
	[0,0,1,0,0,1,0,0,1],
	[0,0,1,0,0,1,0.5,1,0],
	[0,0,1,0,0,1,0.5,0,1],
	[0,0,1,0.5,0,0,1,1,0],
	[0,0,1,0.5,0,0,1,0,1],
	[0,0,1,0,0.5,0,1,1,0],
	[0,0,1,0,0.5,0,1,0,1],
	[0,0,1,0,0,0.5,1,1,0],
	[0,0,1,0,0,0.5,1,0,1],
	[0,0,1,0,0,0,1,1,0],
	[0,0,1,0,0,0,1,0,1]
	]


#csvヘッダ
header = [
'user_vec', 
'shop_vec', 
'distance [m]', 
'cosθ', 
'id', 
'shop_name', 
'URL', 
'genre', 
'oaiso_genre', 
'lat', 
'lng', 
'address', 
'budget_lunch_min',
'budget_lunch_max',
'budget_dinner_min',
'budget_dinner_max']

#シミュレーション結果

dist = distance_filter(r, lat, lng) #距離フィルタ

with open(dirpass, 'w', encoding='utf-8') as f:
	writer = csv.writer(f, lineterminator='\n')
	writer.writerow(header)	


	for uvec in uvec_list:
		while r <= 1000:
			r += 250
			dist = distance_filter(r, lat, lng) #距離フィルタ
			score_list = contents_filter(dist, uvec) #内容ベースツフィルタ
			
			for row in score_list:
				if row[3] > 0.6:
					app.append([row[3], row[4]])
					continue

			if len(app) > 0:
				results = sorted(score_list, key=lambda x:x[3], reverse=True)
				if len(results) >= num:
					break

		for row in results[:num]:
			writer.writerow(row)



	"""
	for uvec in uvec_list:
		while r <= 1000:
			r = r + 250
			results = contents_filter(r, lat, lng, cos, uvec) #内容ベースツフィルタ
			if len(results) >= num:
				break
		for row in results[:num]:	
			writer.writerow(row)
	"""







